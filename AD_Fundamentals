>> Windows domain is a group of users and computers under the administration of a given business. The main idea behind a domain is to centralise the administration of common components of a Windows computer network in a single repository called Active Directory (AD). The server that runs the Active Directory services is known as a Domain Controller (DC).

>> The main advantages of having a configured Windows domain are:

	Centralised identity management: All users across the network can be configured from Active Directory with minimum effort.

	Managing security policies: You can configure security policies directly from Active Directory and apply them to users and computers across the network as needed.

>> The core of any Windows Domain is the Active Directory Domain Service (AD DS). This service acts as a catalogue that holds the information of all of the "objects" that exist on your network. Amongst the many objects supported by AD, we have users, groups, machines, printers, shares and many others

>> Users

	Users are one of the most common object types in Active Directory. Users are one of the objects known as security principals, meaning that they can be authenticated by the domain and can be assigned privileges over resources like files or printers. You could say that a security principal is an object that can act upon resources in the network.

>> Users can be used to represent two types of entities:

	People: users will generally represent persons in your organisation that need to access the network, like employees.

	Services: you can also define users to be used by services like IIS or MSSQL. Every single service requires a user to run, but service users are different from regular users as they will only have the privileges needed to run their specific service.

>> Machines

	Machines are another type of object within Active Directory; for every computer that joins the Active Directory domain, a machine object will be created. Machines are also considered "security principals" and are assigned an account just as any regular user. This account has somewhat limited rights within the domain itself.

	The machine accounts themselves are local administrators on the assigned computer, they are generally not supposed to be accessed by anyone except the computer itself, but as with any other account, if you have the password, you can use it to log in.

	Note: Machine Account passwords are automatically rotated out and are generally comprised of 120 random characters.

	Identifying machine accounts is relatively easy. They follow a specific naming scheme. The machine account name is the computer's name followed by a dollar sign. For example, a machine named DC01 will have a machine account called DC01$.

>> Security Group	Description

	Domain Admins		Users of this group have administrative privileges over the entire domain. By default, they can administer any computer on the domain, including the DCs.

	Server Operators	Users in this group can administer Domain Controllers. They cannot change any administrative group memberships.

	Backup Operators	Users in this group are allowed to access any file, ignoring their permissions. They are used to perform backups of data on computers.

	Account Operators	Users in this group can create or modify other accounts in the domain.

	Domain Users		Includes all existing user accounts in the domain.

	Domain Computers	Includes all existing computers in the domain.

	Domain Controllers	Includes all existing DCs on the domain.

>> OUs are mainly used to define sets of users with similar policing requirements. The people in the Sales department of your organisation are likely to have a different set of policies applied than the people in IT, for example. Keep in mind that a user can only be a part of a single OU at a time.

>> These containers are created by Windows automatically and contain the following:

	Builtin: 	    	  Contains default groups available to any Windows host.
	Computers: 	          Any machine joining the network will be put here by default. You can move them if needed.
	Domain Controllers: 	  Default OU that contains the DCs in your network.
	Users: 		          Default users and groups that apply to a domain-wide context.
	Managed Service Accounts: Holds accounts used by services in your Windows domain.

>> Delegation

	One of the nice things you can do in AD is to give specific users some control over some OUs. This process is known as delegation and allows you to grant users specific privileges to perform advanced tasks on OUs without needing a Domain Administrator to step in.

	One of the most common use cases for this is granting IT support the privileges to reset other low-privilege users' passwords. According to our organisational chart, Phillip is in charge of IT support, so we'd probably want to delegate the control of resetting passwords over the Sales, Marketing and Management OUs to him.

	PS C:\Users\phillip> Set-ADAccountPassword sophie -Reset -NewPassword (Read-Host -AsSecureString -Prompt 'New Password') -Verbose

	Set-ADUser -ChangePasswordAtLogon $true -Identity sophie -Verbose

>> GPO distribution

	GPOs are distributed to the network via a network share called SYSVOL, which is stored in the DC. All users in a domain should typically have access to this share over the network to sync their GPOs periodically. The SYSVOL share points by default to the C:\Windows\SYSVOL\sysvol\ directory on each of the DCs in our network.

>> When Kerberos is used for authentication, the following process happens:

	The user sends their username and a timestamp encrypted using a key derived from their password to the Key Distribution Center (KDC), a service usually installed on the Domain Controller in charge of creating Kerberos tickets on the network.

	The KDC will create and send back a Ticket Granting Ticket (TGT), which will allow the user to request additional tickets to access specific services. The need for a ticket to get more tickets may sound a bit weird, but it allows users to request service tickets without passing their credentials every time they want to connect to a service. Along with the TGT, a Session Key is given to the user, which they will need to generate the following requests.

	Notice the TGT is encrypted using the krbtgt account's password hash, and therefore the user can't access its contents. It is essential to know that the encrypted TGT includes a copy of the Session Key as part of its contents, and the KDC has no need to store the Session Key as it can recover a copy by decrypting the TGT if needed.

	When a user wants to connect to a service on the network like a share, website or database, they will use their TGT to ask the KDC for a Ticket Granting Service (TGS). TGS are tickets that allow connection only to the specific service they were created for. To request a TGS, the user will send their username and a timestamp encrypted using the Session Key, along with the TGT and a Service Principal Name (SPN), which indicates the service and server name we intend to access.

	As a result, the KDC will send us a TGS along with a Service Session Key, which we will need to authenticate to the service we want to access. The TGS is encrypted using a key derived from the Service Owner Hash. The Service Owner is the user or machine account that the service runs under. The TGS contains a copy of the Service Session Key on its encrypted contents so that the Service Owner can access it by decrypting the TGS.

	The TGS can then be sent to the desired service to authenticate and establish a connection. The service will use its configured account's password hash to decrypt the TGS and validate the Service Session Key.


>> NetNTLM Authentication

	NetNTLM works using a challenge-response mechanism. The entire process is as follows:

	NetNTLM authentication

	The client sends an authentication request to the server they want to access.

	The server generates a random number and sends it as a challenge to the client.

	The client combines their NTLM password hash with the challenge (and other known data) to generate a response to the challenge and sends it back to the server for verification.

	The server forwards the challenge and the response to the Domain Controller for verification.

	The domain controller uses the challenge to recalculate the response and compares it to the original response sent by the client. If they both match, the client is authenticated; otherwise, access is denied. The authentication result is sent back to the server.

	The server forwards the authentication result to the client.


